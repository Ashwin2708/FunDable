import React, {useState} from 'react';
import { useNavigate } from 'react-router-dom';
import { ethers } from 'ethers';

import { useStateContext } from '../context';
import { money, money2 } from '../assets';
import { CustomButton, FormField } from '../components';
import { checkIfImage } from '../utils';

const CreateCampaign = () => {

  const navigate = useNavigate();
  const [isLoading, setisLoading] = useState(false);
  const { createCampaign } = useStateContext();
  const [form, setform] = useState({
    name : '',
    title : '',
    description: '',
    target: '',
    deadline: '',
    image: ''
  });

  const handleFormFieldChange = (fieldName, e) =>{
    setform({...form, [fieldName] : e.target.value})
  }

  const handleSubmit = async (e) => {
    e.preventDefault();
    
    checkIfImage(form.image, async (exists) =>{
      if(exists){
        setisLoading(true);
        await createCampaign({ ...form, target: ethers.utils.parseUnits(form.target, 18)})
        setisLoading(false);
        navigate('/');
      }
      else {
        alert('Provide VALID image URL')
        setform({...form, image: ''});
      }
    })
    // console.log(form);
  }

  return (
    <div className='bg-[#1c1c24] flex justify-center items-center rounded-[18px] flex-col sm:p-10 p-4'>
      {isLoading && 'Loader...'}
      <div className='flex justify-center items-center p-[16px] sm:min-w-[380px] bg-[#3a3a43] rounded-[10px]'>
        <h1 className='font-epilogue font-bold sm:text-[25px] text-[18px] leading-[38px] text-white'>
          Start a Campaign
        </h1>
      </div>

      <form onSubmit={handleSubmit} className='w-full mt-[65px] flex flex-col gap-[30px]'>
      <div className='flex flex-wrap gap-[40px]'>
        <FormField 
          LabelName = 'Your Name *'
          placeholder = 'Ashwin Kumar'
          inputType = 'text'
          value = {form.name}
          handleChange = {(e) => handleFormFieldChange 
            ('name', e)}
        />
        <FormField 
          LabelName = 'Campaign Title *'
          placeholder = 'Enter Your CAMPAIGN Name'
          inputType = 'text'   
          value = {form.title}
          handleChange = {(e) => handleFormFieldChange 
            ('title', e)}
        />
      </div>
      <FormField 
          LabelName = 'Story/Background *'
          placeholder = 'Enter a story for your Campaign'
          isTextArea
          value = {form.description}
          handleChange = {(e) => handleFormFieldChange 
            ('description', e)}
        />
        <div className='w-full flex justify-center items-center p-4 bg-[#EC7063] h-[120px] rounded-[10px]'>
          <img src={money2} alt='monney' className='w-[40px] h-[40px] object-contain' />
          <h4 className='font-epilogue font-bold text-[25px] text-white ml-[20px]'>
            You will get 95% of the raised amount
          </h4>
          <h3 className='font-epilogue font-bold text-[21px] text-white ml-[20px] sm:text-[15px]'>
            The rest of the 5% will go back to the organization
          </h3>
          <h2 className='font-epilogue font-bold text-[12px] text-white ml-[20px] sm:text-[8px]'>
            T&C applied **
          </h2>
        </div>
        <div className='flex flex-wrap gap-[40px]'>
        <FormField 
          LabelName = 'Goal  *'
          placeholder = 'ETH 0.50'
          inputType = 'text'
          value = {form.target}
          handleChange = {(e) => handleFormFieldChange 
            ('target', e)}
        />
        <FormField 
          LabelName = 'Expire Date *'
          placeholder = 'Mention the End Date'
          inputType = 'date'   
          value = {form.deadline}
          handleChange = {(e) => handleFormFieldChange 
            ('deadline', e)}
        />
        </div>
        <FormField 
          LabelName = 'Campaign Image *'
          placeholder = 'Put an image tht represents your Campaign/Funding Event.'
          inputType = 'url'
          value = {form.image}
          handleChange = {(e) => handleFormFieldChange 
            ('image', e)}
        />

        <div className='flex justify-center items-center mt-[40px]'>
          <CustomButton 
            btnType='submit'
            title='Submit new Campaign here'
            styles='bg-[#1dc071]'
          />
        </div>
      </form>
    </div>
  )
}

export default CreateCampaign